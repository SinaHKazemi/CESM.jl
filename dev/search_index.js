var documenterSearchIndex = {"docs":
[{"location":"explanation/model_theory/#Model-Concepts","page":"Model Concepts","title":"Model Concepts","text":"","category":"section"},{"location":"explanation/model_theory/","page":"Model Concepts","title":"Model Concepts","text":"What we can model using the model ?\nWhat are the outputs of the model ?\nWhat are the components of the model ?\nWhat are the main assumptions of the model ? equiliburium of the energy carriers\nPlanning years, time steps and how they are connected","category":"page"},{"location":"explanation/model_theory/#Equilibrium-of-the-Energy-Carriers","page":"Model Concepts","title":"Equilibrium of the Energy Carriers","text":"","category":"section"},{"location":"explanation/model_theory/","page":"Model Concepts","title":"Model Concepts","text":"all the energy carriers are in equilibrium","category":"page"},{"location":"explanation/model_theory/#Boundries-of-the-Model","page":"Model Concepts","title":"Boundries of the Model","text":"","category":"section"},{"location":"explanation/model_theory/","page":"Model Concepts","title":"Model Concepts","text":"Dummy Carrier","category":"page"},{"location":"explanation/model_theory/","page":"Model Concepts","title":"Model Concepts","text":"","category":"page"},{"location":"reference/variables/#Variables","page":"Variables","title":"Variables","text":"","category":"section"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"In this section, you will learn about the variables definition. The variables are not defined in the config file. They are defined in the variables.jl file.","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"variables = Dict(\n        \"total_cost\" => (type=\"Float\", sets=(), quantity=\"Money\"),\n        \"capital_cost\" => (type=\"Float\", sets=(), quantity=\"Money\"),\n        \"operational_cost\" => (type=\"Float\", sets=(), quantity=\"Money\"),\n        \"total_residual_value\" => (type=\"Float\", sets=(), quantity=\"Money\"),\n        \"residual_value\" => (type=\"Float\", sets=(\"P\", \"Y\"), quantity=\"Money\"),\n        \"annual_emission\" => (type=\"Float\", sets=(\"Y\",), quantity=\"CO2 Emissions\"),\n        ...\n)","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"The var_ prefix is removed from the variable names since it is not necessary in the code. The keys are the name of the variables. The values are named tuples that contain the following keys:","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"type: The type of the variable. The type must be one of the following: Float, Integer or Boolean.\nsets: The sets that the variable belongs to. The sets must be one of the following: Y, T, C or P.\nquantity: The quantity that the variable represents. The quantity must be one of the following: power, energy, co2_emissions, cost_energy, cost_power, co2_spec and money.","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"<span style=\"color:red\">ðŸš¨ Explain about the default value for variables !</span>","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"","category":"page"},{"location":"reference/config/#Config-File","page":"Config File","title":"Config File","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"config file is a json file that contains the configuration of the project. Any object in the config file could have a comment key that will be ignored by the parser. The main structure is as follows:","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"{\n  \"units\": {..},\n  \"parameters\" : {..},\n  \"timesteps\": [..],\n  \"years\": [..],\n  \"carriers\": [..],\n  \"processes\": [..]\n}","category":"page"},{"location":"reference/config/#Units","page":"Config File","title":"Units","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"units\": {\n    \"power\": {\"input\": \"GW\", \"scale\": 1, \"output\": \"GW\"},\n    \"energy\": {\"input\": \"TWh\", \"scale\": 1000, \"output\": \"GWh\"},\n    \"co2_emissions\": {\"input\": \"Mio t\", \"scale\": 1, \"output\": \"Mio t\"},\n    \"cost_energy\": {\"input\": \"EUR/MWh\", \"scale\": 0.001, \"output\": \"Mio EUR/GWh\"},\n    \"cost_power\": {\"input\": \"EUR/kW\", \"scale\": 1, \"output\": \"Mio EUR/GW\"},\n    \"co2_spec\": {\"input\": \"kg/kWh\", \"scale\": 0.001, \"output\": \"Mio t/GWh\"},\n    \"money\": {\"input\": \"Mio EUR\", \"scale\": 1, \"output\": \"Mio EUR\"}\n}","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The units is a dictionary. The keys are not hard coded but in the German model the power, energy, co2_emissions, cost_energy, cost_power, co2_spec and money keys are used. These keys are the units that are referenced in the model parameters.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The value corresponding to each key is also a dictionary that must have the input, scale and output keys. The input key is the unit of the input quantity, the scale key is the scale factor that is used to convert the input quantity to the output quantity, and the output key is the unit of the output quantity.","category":"page"},{"location":"reference/config/#Time-Steps","page":"Config File","title":"Time Steps","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The time steps is a list of integers that represents the time steps of the model.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"timesteps\": [1,2,3,4,5]","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"you could also refer to the file that contains the time steps by its path. The path is either a relative path to the config file or an absolute path. file.txt is equivalent to ./file.txt. The format of the file could be csv or txt.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"timesteps\": \"path/to/file.txt\"","category":"page"},{"location":"reference/config/#Years","page":"Config File","title":"Years","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Years is a list of integers that represents the years of the model.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"years\": [2020,2030,2040]","category":"page"},{"location":"reference/config/#Parameters","page":"Config File","title":"Parameters","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"{\n    \"parameters\" : {\n        \"discount_rate\" : {\n            \"comment\": \"sets and type properties are mandatory\",\n            \"sets\": [\"Y\"], \n            \"type\": \"Float\",\n            \"value\":  0.05\n        }, \n        ..\n    },\n}","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The value of the \"parameters\" key is also a dictionary. The keys of this dictionary are the parameters of the model, and its value is another dictionary containing the following keys:","category":"page"},{"location":"reference/config/#sets","page":"Config File","title":"sets","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Each parameter must have a sets key, which is a list of the sets over which the parameter is indexed.  The value for the 'sets' key must be a list of strings representing the sets over which the parameter is indexed. These sets can be Y(years), T(timesteps), C(carriers) or P(processes). The allowable combinations are:","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"[]\n[\"Y\"]\n[\"P\"]\n[\"C\"]\n[\"P\", \"Y\"]\n[\"P\", \"T\"]","category":"page"},{"location":"reference/config/#type","page":"Config File","title":"type","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The value of the type key is a string indicating the type of the parameter. It must be one of the following types:","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Float\nInteger\nBoolean\nString","category":"page"},{"location":"reference/config/#value","page":"Config File","title":"value","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If the value of the sets key doesn't contain C or P then the value field is mandatory and the value of the parameter must be defined here. If the sets contains  C or P then the value of the parameter must be defined in the  carriers and processes fields, which will be explained later.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If the sets is an empty list then the value of the parameter is a scalar. If the sets is equal to [\"Y\"] then the value of the parameter could be in one of the following forms:","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Scalar like the following example:","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"value\": 19.32","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Or a piecewise linear function like this:","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"value\": [\n    {\"x\": 2020,\"y\": 19.32},\n    {\"x\": 2030,\"y\": 32.2}\n]","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"This piecewise function must contain at least two points. The value of the function out of the range of the function is not defined.","category":"page"},{"location":"reference/config/#Carriers","page":"Config File","title":"Carriers","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"carrires is a dictionary that contains the carriers of the model. The keys are the name of the carriers and the values are also dictionaries containing the parameters which are indexed over carriers.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The 'Dummy' carrier must always be included in the list of carriers.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If a parameter is defined for a carrier, then its value must be defined in the corresponding carrier dictionary.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"carriers\": {\n    \"Dummy\": {\n        \"comment\": \"optional comment for the carrier\"\n    },\n    \"electricity\": {\n        \"carrier_color\": \"blue\" \n    },\n    \"gas\": {\n        \"carrier_color\": \"red\"\n    },\n    // other carriers ...\n}","category":"page"},{"location":"reference/config/#Processes","page":"Config File","title":"Processes","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"processes is a list of dictionaries that contains the processes of the model. Each dictinary must have carrier_in and carrier_out keys that are the input and output carriers of the conversion process. The value of the carrier_in and carrier_out key must be in the list of keys in the carriers dictionary.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If a parameter is defined for a process then the value of the parameter must be defined in the dictionary corresponding to that process.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"processes\": {\n    \"electricity_to_gas\": {\n        \"comment\": \"comment for the process\",\n        \"carrier_in\": \"electricity\",\n        \"carrier_out\": \"gas\",\n    },\n    \"electricity_to_heat\": {\n        \"comment\": \"comment for the process\",\n        \"carrier_in\": \"electricity\",\n        \"carrier_out\": \"heat\"\n        \"efficiency\": 0.9,\n        //  other parameters ...\n        }\n    },\n    // other processes ...\n}","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If a parameter is defined over [\"P\",\"Y\"] then the value of the parameter could be either a scalar or a piecewise function. If the parameter is defined over [\"P\",\"T\"] then the value of the parameter must be either a scalar or a reference to a file that contains the values of the parameter over all the time steps of a year. For example if the time steps are [1,2,10,11], then the corresponding values to the time steps are the 1th, 2th, 10th and 11th values in the file.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"","category":"page"},{"location":"reference/api/#API-and-CLI","page":"API","title":"API and CLI","text":"","category":"section"},{"location":"reference/api/","page":"API","title":"API","text":"There are two ways to run the model, via the command line interface (CLI) or through the API. The CLI is a simple way to run the model and is suitable for users who are not familiar with programming. The API is a more flexible way to run the model and is suitable for users who are familiar with programming and are looking for more control over the model.","category":"page"},{"location":"reference/api/#CLI","page":"API","title":"CLI","text":"","category":"section"},{"location":"reference/api/#Run-a-simulation","page":"API","title":"Run a simulation","text":"","category":"section"},{"location":"reference/api/#Plot-results","page":"API","title":"Plot results","text":"","category":"section"},{"location":"reference/api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"reference/api/#Model-Initialization","page":"API","title":"Model Initialization","text":"","category":"section"},{"location":"reference/api/","page":"API","title":"API","text":"model = initialize_model(input_file)\noptimizee!(model)\nwrite_model_to_file(model)\nget_output(model)\nwrite_output_to_file() # either excel or json","category":"page"},{"location":"reference/api/#Model-Extension","page":"API","title":"Model Extension","text":"","category":"section"},{"location":"reference/api/","page":"API","title":"API","text":"clone_carrier!(input, old_name, new_name)\nclone_conversion_process!(input, old_name, new_name, new_carrier_in, new_carrier_out)\ndisable_conversion_process!(input, name)\nenable_conversion_process!(input, name)","category":"page"},{"location":"reference/api/#Plotting","page":"API","title":"Plotting","text":"","category":"section"},{"location":"reference/api/","page":"API","title":"API","text":"plot_results(input, output, plot_type, plot_name)","category":"page"},{"location":"reference/api/","page":"API","title":"API","text":"","category":"page"},{"location":"tutorials/sub2/#Archive","page":"Subsection 2","title":"Archive","text":"","category":"section"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"Install using Julia's package manager:","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"using Pkg\nPkg.add(\"YourProject\")","category":"page"},{"location":"tutorials/sub2/#Example.jl-Documentation","page":"Subsection 2","title":"Example.jl Documentation","text":"","category":"section"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"This is the binomial coefficient.","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"To write a system of equations, use the aligned environment:","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"beginaligned\nnablacdotmathbfE  = 4 pi rho \nnablacdotmathbfB  = 0 \nnablatimesmathbfE = - frac1c x_Pin fracpartialmathbfBpartial t \nnablatimesmathbfB = - frac1c left(4 pi mathbfJ + fracpartialmathbfEpartial t right)\nendaligned","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"These are Maxwell's equations.","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"graph TD\n    A[mermaid.js] --> B[DocumenterMermaid]\n    B --> C[Documenter]","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"---\nconfig:\n  look: handDrawn\n  theme: neutral\n---\nflowchart LR\n  A[Start] --> B{Decision}\n  B -->|Yes| C[Continue]\n  B -->|No| D[Stop]","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"","category":"page"},{"location":"howto/howto/#How-To","page":"How To","title":"How To","text":"","category":"section"},{"location":"howto/howto/#Model-a-reservoir","page":"How To","title":"Model a reservoir","text":"","category":"section"},{"location":"howto/howto/#Model-a-Combined-Heat-and-Power-Plant(CHP)","page":"How To","title":"Model a Combined Heat and Power Plant(CHP)","text":"","category":"section"},{"location":"howto/howto/#Multi-regional-model","page":"How To","title":"Multi-regional model","text":"","category":"section"},{"location":"howto/howto/","page":"How To","title":"How To","text":"","category":"page"},{"location":"reference/model/#Model","page":"Model","title":"Model","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"Here we define the mathematical model of the optimization problem.","category":"page"},{"location":"reference/model/#Sets","page":"Model","title":"Sets","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"years: an ordered set of years, denoted by Y.\ntimesteps: an ordered set of time steps selection, denoted by T.\ncarriers: an unordered set of energy carriers, denoted by C. Each carrier c in C has a name cname. Two carriers are equal if they have the same name. Dummy is a special carrier that is used to represent the carriers out of the model.\nprocesses: an unordered set of conversion processes, denoted by P.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"Each process p in P has a name pname, input carrier pcarrier_in, output carrier pcarrier_out. Two process are equal if they have the same name, input carrier and output carrier. The subset of P that contains storage conversion processes is denoted by S.","category":"page"},{"location":"reference/model/#Parameters","page":"Model","title":"Parameters","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"The input parameters of the optimization model are listed below. The ranges are not validated in the code, but rather imply that the model is rational within these ranges.","category":"page"},{"location":"reference/model/#General","page":"Model","title":"General","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"discount_rate: The discount rate is the interest rate used to calculate the present value of future cash flows from a project or investment. For example, if we expect to invest â‚¬105 next year, at an interest rate of 5% this amount is worth today: PV=fracFV1+r=frac105105=100\nindices: emptyset (scalar)\nunit: unitless\ntype: Float\ndefault: 0\nRange: [0,infty]\ndiscount_factor[y]: Discount factor for each year that is calculated as follows. It is not directly specified in the config file but is calculated from the discount rate.\nindices: Y\nunit: unitless\ntype: Float\ndefault: 0\nRange: [0,infty]","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textdiscount_factory=(1+textdiscount_rate)^y-Y0quad y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The notation Y0 is the first planning year of the model.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"dt: Time step size. It shows how many hours each time step represents. A a model with hourly time resolution, dt is equal to 1.\nindices: emptyset (scalar)\nunit: unitless\ntype: Integer\nrange: [1,8760]\nw:  weight of each time step withim the whole year. It is not directly specified in the config file but is calculated from the time step duration and is equal to 8760(dt*T) where T is the number of time steps and 8760 is the number of hours in a year. The number of time steps provided, T, must be such that 8760 is divisible by dt*T.\nindices: emptyset (scalar)\nunit: unitless\ntype: Integer\nrange: [1,8760]","category":"page"},{"location":"reference/model/#CO2","page":"Model","title":"CO2","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"annual_co2_limit[y]: Annual CO2 emission limit of the energy system in year y in Y.\nindices: Y\nunit: CO2 Mass\ntype: Float\ndefault: 0\nrange: [0,infty]\nco2_price[y]: CO2 price for emission from the energy system  in year y in Y.\nindices: Y\nunit: Money/CO2 Mass\ntype: Float\ndefault: 0\nrange: [0,infty]","category":"page"},{"location":"reference/model/#Storage","page":"Model","title":"Storage","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"is_storage[p]: Indicates if the conversion process p in P is a storage process.\nindices: P\nunit: unitless\ntype: Boolean\ndefault: false\nrange: {true, false}\ncharge_efficiency[p]: Efficiency of charging of storage conversion process p in P.\nindices: P\nunit: unitless\ntype: Float\ndefault: 1\nrange: (0,1]\nc_rate[p]: indicates the discharge and charging rate of the storage conversion process p in P. A c_rate of 2 means that the full storage can be fully discharged in (1 hour)/2=30 minutes.\nindices: P\nunit: unitless\ntype: Float\nrange: (0,1]","category":"page"},{"location":"reference/model/#Legacy","page":"Model","title":"Legacy","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"Legacy conversion processes are those that existed before the planning period.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"max_legacy_capacity[p,y]: maximum allowed active legacy capacity of conversion process p in P in year y in Y. For example, it could be used to model a long-term policy for shutting down coal power plants. Even though the plant's lifetime has not ended, you enforce the shutdown.\nindices: P times Y\nunit: power\ntype: Float\ndefault: 0\nmin_legacy_capacity[p,y]: minimum allowed active legacy capacity of conversion process p in P in year y in Y.\nindices: P times Y\nunit: power\ntype: Float\ndefault: 0\nrange: [0,infty]","category":"page"},{"location":"reference/model/#Capacity","page":"Model","title":"Capacity","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"max_capacity[p,y]: maximum allowed active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nunit: power\ntype: Float\ndefault: 0\nrange: [0,infty]\nmin_capacity[p,y]: minimum allowed active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nunit: power\ntype: Float\ndefault: 0\nrange: [0,infty]","category":"page"},{"location":"reference/model/#Costs","page":"Model","title":"Costs","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"operational_cost_energy[p,y]: Operational cost per energy output of conversion process p in P in a year.\nindices: P times Y\nunit: Money/Energy\ntype: Float\ndefault: 0\nrange: [0,infty]\noperational_cost_power[p,y]: Operational cost per active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nunit: Money/Power\ntype: Float\ndefault: 0\nrange: [0,infty]\ncapital_cost_power[p,y]: Capital cost per active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nunit: Money/Power\ntype: Float\ndefault: 0\nrange: [0,infty]","category":"page"},{"location":"reference/model/#Fractions","page":"Model","title":"Fractions","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"min_fraction_in[p,y]: Minimum fraction of the input carrier(carrier_in) consumed by conversion process p in P in year y in Y.\nindices: P times Y\nunit: dimensionless\ntype: Float\ndefault: 0\nrange: [0,1]\nmin_fraction_out[p,y]: Minimum fraction of the output carrier(carrier_out) generated by conversion process p in P in year y in Y.\nindices: P times Y\nunit: dimensionless\ntype: Float\ndefault: 0\nrange: [0,1]\nmax_fraction_in[p,y]: Maximum fraction of the input carrier(carrier_in) consumed by conversion process p in P in year y in Y.\nindices: P times Y\nunit: dimensionless\ntype: Float\ndefault: 1\nrange: [0,1]\nmax_fraction_out[p,y]: Maximum fraction of the output carrier(carrier_out) generated by conversion process p in P in year y in Y.\nindices: P times Y\nunit: dimensionless\ntype: Float\ndefault: 1\nrange: [0,1]","category":"page"},{"location":"reference/model/#Energy-Output-Limits","page":"Model","title":"Energy Output Limits","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"max_energy_out[p,y]: Maximum energy output of conversion process p in P in year y in Y.\nindices: P times Y\nunit: Energy\ntype: Float\ndefault: infty\nrange: [0,infty]\nmin_energy_out[p,y]: Minimum energy output of conversion process p in P in year y in Y.\nindices: P times Y\nunit: Energy\ntype: Float\ndefault: 0\nrange: [0,infty]","category":"page"},{"location":"reference/model/#Time-Series","page":"Model","title":"Time Series","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"availability_profile[p,t]: Availability profile of conversion process p in P at  time step t in T. If the availability parameter of a wind turbine is 05, then 50% of the available active capacity could be utilized.\nindices: P times T\nunit: dimensionless\ntype: Float\ndefault: 1\nRange: [0,1]\noutput_profile[p,t]: Share of the annual energy output supplied by the conversion process p in P at time step t in T such that:  sum_t in Toutput_profilept=1 quad forall p in P\nindices: P times T\nunit: dimensionless\ntype: Float\ndefault: 1\nRange: [0,1]","category":"page"},{"location":"reference/model/#Technical","page":"Model","title":"Technical","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"lifetime[p]: Technical lifetime of conversion process p in P in years.\nindices: P\nunit: Time\ntype: Integer\ndefault: 100\nrange: [1,infty]\ntechnical_availability[p]: Technical availability of conversion process p in P. For example, if the technical availability of a gas power plant is 09, then it can only be utilized 90% of the year based solely on technical factors.\nindices: P\nunit: dimensionless\ntype: Float\ndefault: 1\nrange: [0,1]\nspecific_co2[p]: Specific CO2 emission intensity per energy output of conversion process p in P.\nindices: P\nunit: CO2 Mass/Energy\ntype: Float\ndefault: 0\nrange: [0,infty]\nefficiency[p]: Efficiency of conversion process p in P.\nindices: P\nunit: dimensionless\ntype: Float\ndefault: 1\nRange: [0,1]","category":"page"},{"location":"reference/model/#Variables","page":"Model","title":"Variables","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"All variables are non-negative unless otherwise specified.","category":"page"},{"location":"reference/model/#Costs-2","page":"Model","title":"Costs","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_total_cost: Total cost.\nindices: emptyset (scalar)\nunit: Money\ntype: Float\nvar_capital_cost: Capital cost.\nindices: emptyset (scalar)\nunit: Money\ntype: Float\nvar_operational_cost: Operational cost.\nindices: emptyset (scalar)\nunit: Money\ntype: Float\nvar_residual_value[p,y]: The residual value is the present value of a property at the end of a planning period. This variable represents the residual value of the conversion process p in P that is built in year y in Y.\nindices: P times Y\nunit: Money\ntype: Float\nvar_total_residual_value: Total residual value.\nindices: emptyset (scalar)\nunit: Money\ntype: Float","category":"page"},{"location":"reference/model/#CO2-2","page":"Model","title":"CO2","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_annual_emission[y]: Annual CO2 emission from the energy system in year y in Y.\nindices: Y\nunit: CO2 Mass\ntype: Float","category":"page"},{"location":"reference/model/#Capacity-2","page":"Model","title":"Capacity","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_new_capacity[p,y]: New capacity of conversion process pin P in year y in Y.\nindices: P times Y\nunit: Power\ntype: Float\nvar_active_capacity[p,y]: Active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nunit: Power\ntype: Float\nvar_legacy_capacity[p,y]: Active legacy capacity of conversion process p in P in year y in Y.\nindices: P times Y\nunit: Power\ntype: Float","category":"page"},{"location":"reference/model/#Power-and-Energy","page":"Model","title":"Power and Energy","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_power_in[p,y,t]: Power input of conversion process p in P in year y in Y at time step t in T.\nindices: P times Y times T\nunit: Power\ntype: Float\nvar_power_out[p,y,t]: Power output of conversion process p in P in year y in Y at time step t in T.\nindices: P times Y times T\nunit: Power\ntype: Float\nvar_total_energy_out[p,y]: Total energy output of conversion process p in P in year y in Y.\nindices: P times Y\nunit: Energy\ntype: Float\nvar_total_energy_in: Total energy input of conversion process p in P in year y in Y.\nindices: P times Y\nunit: Energy\ntype: Float\nvar_energy_out_time: Energy output of conversion process p in P in year y in Y at time step t in T.\nindices: P times Y times T\nunit: Energy\ntype: Float\nvar_energy_in_time[p,y,t]: Energy input of conversion process p in P in year y in Y at time step t in T.\nindices: P times Y times T\nunit: Energy\ntype: Float\nvar_net_energy_generation[c,y,t]: Net energy generation of energy carrier c in C in year y in Y at time step t in T.\nindices: C times Y times T\nunit: Energy\ntype: Float\nvar_net_energy_consumption[c,y,t]: Net energy consumption of energy carrier c in C in year y in Y at time step t in T.\nindices: C times Y times T\nunit: Energy\ntype: Float","category":"page"},{"location":"reference/model/#Storage-2","page":"Model","title":"Storage","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_storage_level[p,y,t]: Storage level of a storage conversion process p in P in year yin Y at time step tin T.\nindices: P times Y times T\nunit: Energy\ntype: Float\nvar_max_storage_level[p,y]: The maximum energy capacity of the storage conversion process p in P in year yin Y.\nindices: P times Y\nunit: Energy\ntype: Float","category":"page"},{"location":"reference/model/#Constraints","page":"Model","title":"Constraints","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"In all constraints, if a parameter is not defined, the default value is used. If a default value is not defined, the constraint is not included in the model.","category":"page"},{"location":"reference/model/#Costs-3","page":"Model","title":"Costs","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"Total cost is the sum of operational and capital costs. The default objective function is also the total cost.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_cost = textvar_capital_cost + textvar_operational_cost","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"Capital cost is equal to the present value of all capital expenditures minus the residual value.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"beginalign*\ntextvar_capital_cost = sum_y in Y \nleft(\n  textdiscount_factory * sum_p in P \n    left(\n      textvar_new_capacityp y * textcapital_cost_powerpy\n    right)\nright)\n- textvar_total_residual_value\nendalign*","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"Operational costs comprise the expenses of producing energy, keeping the system running, and any COâ‚‚ emission penalties. In the following equation, y^+ is the planning year after y.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"beginalign*\ntextvar_operational_cost = \nsum_y in Y textdiscount_factory * left(y^+-yquad textif quad y neq Yend  textelse quad 1 right) * \n(textvar_annual_emissiony * textco2_pricey + \nsum_pin P \n  textvar_active_capacitypy * textoperational_cost_powerpy +\n  textvar_total_energy_outpy * textoperational_cost_energypy)\nendalign*","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The residual value of the new capacity of conversion process p in P built in y in Y.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"beginalign*\ntextvar_residual_valuepy = textvar_new_capacityy * textcapital_cost_powerpy \n* (1 - fracYend-y+1textlifetimep) * textdiscount_factory quad forall yin Yforall p in P quad textif quad Yend - y + 1  textlifetimep\nendalign*","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The sum of residual values over all y in Y and p in P.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_residual_value = sum_p in P sum_y in Y textvar_residual_valuey quad textif quad Yend - y + 1 textlifetimep","category":"page"},{"location":"reference/model/#Power-balance","page":"Model","title":"Power balance","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"The power balance equation applies to all energy carriers except the dummy.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"sum_p in P  pcarrier_in=c textvar_power_inpyt = \nsum_p in P  pcarrier_out=c textvar_power_outpyt quad forall c in Csetminus Dummy forall y in Y forall t in T","category":"page"},{"location":"reference/model/#CO2-3","page":"Model","title":"CO2","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"The co2 emission in year y in Y is the sum of emissions from all conversion processes.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_annual_emissiony = sum_p in P textvar_total_energy_outpy * textspecific_co2p quad forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The annual CO2 emission must not exceed the limit set by the user.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_annual_emissiony leq textannual_co2_limity quad forall y in Y","category":"page"},{"location":"reference/model/#Power-Output","page":"Model","title":"Power Output","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"The output is limited by the efficieny of the process. It doesn't apply to storage processes.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_outpyt = textvar_power_inpyt * textefficiencyp quad forall p in Psetminus S forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The output is limited by the technical availability of the process.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_outpyt leq textvar_active_capacitypy * texttechnical_availabilityp quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The output of renewables are limited by the availability of the process.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_outpyt leq textvar_active_capacitypy * textavailability_profilept quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Power-Energy","page":"Model","title":"Power-Energy","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"The energy output (or input) of a conversion process at a given time is equal to the power at that time multiplied by the length of the time interval in hours(dt). This value is also multiplied by w, which is the weight of that timestep in a year.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_out_timepyt = textvar_power_outpyt * textdt * textw quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_in_timepyt = textvar_power_inpyt * textdt * textw quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Fractions-2","page":"Model","title":"Fractions","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_out_timepyt geq textmin_fraction_outpy * textvar_net_energy_generationpcarrier_outyt quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_out_timepyt leq textmax_fraction_outpy * textvar_net_energy_generationpcarrier_outyt quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_in_timepyt geq textmin_fraction_inpy * textvar_net_energy_consumptionpcarrier_inyt quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_in_timepyt leq textmax_fraction_inpy * textvar_net_energy_consumptionpcarrier_inyt quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Capacity-3","page":"Model","title":"Capacity","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"Maximum and minimum of the legacy capacity","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_legacy_capacitypy leq textmax_legacy_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_legacy_capacitypy geq textmin_legacy_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"Upper limit for the active capacity","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_active_capacitypy leq textvar_legacy_capacitypy + \nsum_yin Y  y-textlifetimepyleq ytextvar_new_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"Maximum and minimum of the active capacity","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_active_capacitypy leq  textmax_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_active_capacitypy geq  textmin_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/#Auxiliary-Linking-Variables","page":"Model","title":"Auxiliary Linking Variables","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_energy_outpy = sum_t in T textvar_energy_out_timepyt quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_energy_inpy = sum_t in T textvar_energy_in_timepyt quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_net_energy_generationcyt = sum_pin Ppcarrier_out=c\ntextvar_energy_out_timepyt quad forall c in C forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_net_energy_consumptioncyt = sum_pin Ppcarrier_in=c\ntextvar_energy_in_timepyt quad forall c in C forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Generation","page":"Model","title":"Generation","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"Minimum and maximum of the energy output","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_energy_outpy leq textmax_energy_outpy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_energy_outpy geq textmin_energy_outpy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The output profile is used to model demands","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_out_timepyt = textvar_total_energy_outpy \n* textoutput_profilept quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Storage-3","page":"Model","title":"Storage","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"Let Ssubseteq P be the set of conversion processes that are storage processes.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"S = p in P  pis_storage","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"then","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The active capacity of a storage is the maximum throughput power. The following constraint calculates the maximum capacity of the storage","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_max_storage_levelsy = textvar_active_capacitysytextc_rates quad forall s in S forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The storage level must be less than the maximum capacity.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_storage_levelsyt leq textvar_max_storage_levelsy quad forall s in S forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The active capacity of the storage is its maximum throughput power.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_insyt leq textvar_active_capacitysy quad forall s in S forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"beginalign*\ntextvar_storage_levelsyt = textvar_storage_levelsyt^- \n+ textvar_power_insyt * textdt * textcharge_efficiencys\n- textvar_power_outsyt * textdt  textefficiencys\nquad forall s in S forall y in Y forall t in T\nendalign*","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"notaion t^- is the previous time step of t. For the first time step, t^- is the last time step.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"","category":"page"},{"location":"#CESM:-Compact-Energy-System-Model","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"section"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"CESM is a multimodal energy system model that can be used to model energy systems with different types of energy carriers (electricity, gas, ...) and conversion processes (gas power plant, PV power plants, heat pumps and ...). The primary goal of CESM is to provide a simple, minimal and easy to understand and extend model for research and teaching purposes.","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"The package is developed in Julia to provide a high performance and easy to use interface and use the power of JuMP for the optimization.","category":"page"},{"location":"#Documentation-Structure","page":"CESM: Compact Energy System Model","title":"Documentation Structure","text":"","category":"section"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"The documentation is organized into the following sections:","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Tutorials - Detailed walk-throughs to help you learn how to use CESM\nHow to... - Directions to help guide your work for a particular task\nExplanation - Additional details and background information to help you understand CESM, its structure, and how it works behind the scenes\nReference - Technical references and API for a quick look-up during your work","category":"page"},{"location":"#FAQ","page":"CESM: Compact Energy System Model","title":"FAQ","text":"","category":"section"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Q: Who is this tool for?   A: Researchers and students exploring energy system concepts and prototypes.","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Q: Is this tool suitable for industrial projects?   A: No, for industrial projects, tools like PyPSA, NREL-Sienna, SpineOpt or TulipaEnergy are better suited.","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Q: Does it model detailed electrical power flows?   A: No, it simplifies by ignoring voltage and phase angle constraints.","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Throughout the CESM documentation, we strive to follow the Diataxis documentation framework. There are four main sections containing different information:","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"page"},{"location":"reference/inout/#Input-and-Output","page":"Input and Output","title":"Input and Output","text":"","category":"section"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"Here we explain about the Input and Output data structures.","category":"page"},{"location":"reference/inout/#Input","page":"Input and Output","title":"Input","text":"","category":"section"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"The Input data structure is a struct containing the input data of the model. This datastructure is produced by the read_input function that gets configuration file as input. It has the follwoing fields:","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"units: a dictionary of  of the Input structs that represents the conversions between the units of the input data and the units of the output data.\ntimesteps: a vector of Time structs that represents the time steps of the model.\nyears: a vector of Year structs that represents the years of the model.\ncarriers: a set of Carrier structs that represents the carriers of the model. Each carrier has a name.\nprocesses: a set of Process structs that represents the processes of the model. Each process has a name, carrierin and carrierout fields.\nparameters: a dictionary of dictionaries that contains the parameters of the model. The keys of the dictionary are the names of the parameters and the values are either scalar or dictionaries (possibly nested) that contain the value of the parameter.","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"","category":"page"},{"location":"tutorials/installation/#Installlation","page":"Installation","title":"Installlation","text":"","category":"section"},{"location":"tutorials/installation/","page":"Installation","title":"Installation","text":"","category":"page"}]
}
