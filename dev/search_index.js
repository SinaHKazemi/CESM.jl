var documenterSearchIndex = {"docs":
[{"location":"explanation/model_theory/#Model-Concepts","page":"Model Concepts","title":"Model Concepts","text":"","category":"section"},{"location":"explanation/model_theory/","page":"Model Concepts","title":"Model Concepts","text":"What we can model using the model ?\nWhat are the outputs of the model ?\nWhat are the components of the model ?\nWhat are the main assumptions of the model ? equiliburium of the energy carriers\nPlanning years, time steps and how they are connected","category":"page"},{"location":"explanation/model_theory/#Equilibrium-of-the-Energy-Carriers","page":"Model Concepts","title":"Equilibrium of the Energy Carriers","text":"","category":"section"},{"location":"explanation/model_theory/","page":"Model Concepts","title":"Model Concepts","text":"all the energy carriers are in equilibrium","category":"page"},{"location":"explanation/model_theory/#Boundries-of-the-Model","page":"Model Concepts","title":"Boundries of the Model","text":"","category":"section"},{"location":"explanation/model_theory/","page":"Model Concepts","title":"Model Concepts","text":"Dummy Carrier","category":"page"},{"location":"explanation/model_theory/","page":"Model Concepts","title":"Model Concepts","text":"","category":"page"},{"location":"reference/variables/#Variables","page":"Variables","title":"Variables","text":"","category":"section"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"In this section, you will learn about the variables definition. The variables are not defined in the config file. They are defined in the variables.jl file.","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"variables = Dict(\n        \"total_cost\" => (type=\"Float\", sets=(), quantity=\"Money\"),\n        \"capital_cost\" => (type=\"Float\", sets=(), quantity=\"Money\"),\n        \"operational_cost\" => (type=\"Float\", sets=(), quantity=\"Money\"),\n        \"total_residual_value\" => (type=\"Float\", sets=(), quantity=\"Money\"),\n        \"residual_value\" => (type=\"Float\", sets=(\"P\", \"Y\"), quantity=\"Money\"),\n        \"annual_emission\" => (type=\"Float\", sets=(\"Y\",), quantity=\"CO2 Emissions\"),\n        ...\n)","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"The var_ prefix is removed from the variable names since it is not necessary in the code. The keys are the name of the variables. The values are named tuples that contain the following keys:","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"type: The type of the variable. The type must be one of the following: Float, Integer or Boolean.\nsets: The sets that the variable belongs to. The sets must be one of the following: Y, T, C or P.\nquantity: The quantity that the variable represents. The quantity must be one of the following: power, energy, co2_emissions, cost_energy, cost_power, co2_spec and money.","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"<span style=\"color:red\">ðŸš¨ Explain about the default value for variables !</span>","category":"page"},{"location":"reference/variables/","page":"Variables","title":"Variables","text":"","category":"page"},{"location":"reference/config/#Config-File","page":"Config File","title":"Config File","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"config file is a json file that contains the configuration of the project.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"{\n  \"units\": {..},\n  \"parameters\" : {..},\n  \"tss\": [..],\n  \"years\": [..],\n  \"carriers\": {..},\n  \"processes\": {..}\n}","category":"page"},{"location":"reference/config/#Units","page":"Config File","title":"Units","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"units\": {\n    \"power\":{\"input\": \"GW\", \"scale\": 1, \"output\": \"GW\"},\n    \"energy\": {\"input\": \"TWh\", \"scale\": 1000, \"output\": \"GWh\"},\n    \"co2_emissions\": {\"input\": \"Mio t\", \"scale\": 1, \"output\": \"Mio t\"},\n    \"cost_energy\": {\"input\": \"EUR/MWh\", \"scale\": 0.001, \"output\": \"Mio EUR/GWh\"},\n    \"cost_power\": {\"input\": \"EUR/kW\", \"scale\": 1, \"output\": \"Mio EUR/GW\"},\n    \"co2_spec\": {\"input\": \"kg/kWh\", \"scale\": 0.001, \"output\": \"Mio t/GWh\"},\n    \"money\": {\"input\": \"Mio EUR\", \"scale\": 1, \"output\": \"Mio EUR\"}\n}","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The units is a dictionary that must have the power, energy, co2_emissions, cost_energy, cost_power, co2_spec and money keys. These keys are the quantities that are referenced in the model parameters.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Each key is a dictionary that must have the input, scale and output keys. The input key is the unit of the input quantity, the scale key is the scale factor that is used to convert the input quantity to the output quantity, and the output key is the unit of the output quantity.","category":"page"},{"location":"reference/config/#Parameters","page":"Config File","title":"Parameters","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"{\n    \"parameters\" : {\n        \"discount_rate\" : {\n            \"comment\": \"sets and type properties are mandatory\",\n            \"sets\": [\"Y\"], \n            \"type\": \"Float\",\n            \"value\":  0.05\n        }, \n        ..\n    },\n}","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Any object in the config file could have a comment key that will be ignored by the parser.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Each parameter must have a sets key that is a list of sets that the parameter belongs to.  The value for the 'sets' key must be a list of string names representing the sets to which the parameter belongs. These sets can be Y, T, C or P.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The type key is a string that is the type of the parameter. The type must be one of the following: Float, Integer, Boolean and String.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If the the sets doesn't contain C and P then the value of the parameter must be defined here. If the sets contains C and P then the value of the parameter must be defined in the carriers and conversion_processes sections.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If the sets only contains Y then the value could be an scalar or a piecewise function. A piecewise function could be defined as follows:","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"value\": [\n    {\"x\": 2020,\"y\": 19.32},\n    {\"x\": 2030,\"y\": 32.2}\n]","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The value of the function out of the range of the function is equal to the value of the closest point in the function.","category":"page"},{"location":"reference/config/#Time-Steps","page":"Config File","title":"Time Steps","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"tss\": [1,2,3,4,5]","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"The time steps is a list of integers that represents the time steps of the model. you could also refer to the file that contains the time steps by its path. The path is either a relative path to the config file or an absolute path. file.txt is the same as  ./file.txt. The format of the file could be csv or txt.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"tss\": \"path/to/file.txt\"","category":"page"},{"location":"reference/config/#Years","page":"Config File","title":"Years","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Years is a list of integers that represents the years of the model.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"\"years\": [2020,2030,2040]","category":"page"},{"location":"reference/config/#Carriers","page":"Config File","title":"Carriers","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"Carriers is a dictionary that contains the carriers of the model. The keys of the dictionary are the names of the carriers and the values are dictionaries that contain the parameters of the carriers. If there is no parameter defined for a carrier then the value could be an empty dictionary.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"{\n    \"carriers\": {\n        \"electricity\": {..},\n        \"heat\": {..},\n        ...\n    },\n}","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If a parameter is defined for a carrier then the value of the parameter must be defined in the parameters part of the carrier.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"{\n    \"carriers\": {\n        \"electricity\": {\n            \"comment\": \"comment for the carrier\",\n            \"parameters\": {\n                \"carrier_plot_color\": \"blue\"\n            },\n        },\n        ..\n    },\n}","category":"page"},{"location":"reference/config/#Conversion-Processes","page":"Config File","title":"Conversion Processes","text":"","category":"section"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"conversion processes is a dictionary that contains the conversion processes of the model. The keys of the dictionary are the names of the conversion processes and the values are dictionaries that contain carrier_in, carrier_out and parameters keys. The carrier_in and carrier_out keys are the names of the name of the input and output carriers of the conversion process, respectively. The parameters key is a dictionary that contains the parameters of the conversion process.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"{\n    \"processes\": {\n        \"electricity_to_heat\": {\n            \"comment\": \"comment for the conversion process\",\n            \"carrier_in\": \"electricity\",\n            \"carrier_out\": \"heat\",\n            \"parameters\": {\n                \"efficiency\": 0.9,\n                ..  \n            }\n        },\n    },\n}","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"If a parameter is defined over years then the value of the parameter could be either a scalar or a piecewise function. If the parameter is defined over tss then the value of the parameter then the value must be either a scalar or a reference to a file that contains the values of the parameter over the time steps.","category":"page"},{"location":"reference/config/","page":"Config File","title":"Config File","text":"","category":"page"},{"location":"reference/api/#API-and-CLI","page":"API","title":"API and CLI","text":"","category":"section"},{"location":"reference/api/","page":"API","title":"API","text":"There are two ways to run the model, via the command line interface (CLI) or through the API. The CLI is a simple way to run the model and is suitable for users who are not familiar with programming. The API is a more flexible way to run the model and is suitable for users who are familiar with programming and are looking for more control over the model.","category":"page"},{"location":"reference/api/#CLI","page":"API","title":"CLI","text":"","category":"section"},{"location":"reference/api/#Run-a-simulation","page":"API","title":"Run a simulation","text":"","category":"section"},{"location":"reference/api/#Plot-results","page":"API","title":"Plot results","text":"","category":"section"},{"location":"reference/api/#API","page":"API","title":"API","text":"","category":"section"},{"location":"reference/api/#Model-Initialization","page":"API","title":"Model Initialization","text":"","category":"section"},{"location":"reference/api/","page":"API","title":"API","text":"model = initialize_model(input_file)\noptimizee!(model)\nwrite_model_to_file(model)\nget_output(model)\nwrite_output_to_file() # either excel or json","category":"page"},{"location":"reference/api/#Model-Extension","page":"API","title":"Model Extension","text":"","category":"section"},{"location":"reference/api/","page":"API","title":"API","text":"clone_carrier!(input, old_name, new_name)\nclone_conversion_process!(input, old_name, new_name, new_carrier_in, new_carrier_out)\ndisable_conversion_process!(input, name)\nenable_conversion_process!(input, name)","category":"page"},{"location":"reference/api/#Plotting","page":"API","title":"Plotting","text":"","category":"section"},{"location":"reference/api/","page":"API","title":"API","text":"plot_results(input, output, plot_type, plot_name)","category":"page"},{"location":"reference/api/","page":"API","title":"API","text":"","category":"page"},{"location":"tutorials/sub2/#Archive","page":"Subsection 2","title":"Archive","text":"","category":"section"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"Install using Julia's package manager:","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"using Pkg\nPkg.add(\"YourProject\")","category":"page"},{"location":"tutorials/sub2/#Example.jl-Documentation","page":"Subsection 2","title":"Example.jl Documentation","text":"","category":"section"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"This is the binomial coefficient.","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"To write a system of equations, use the aligned environment:","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"beginaligned\nnablacdotmathbfE  = 4 pi rho \nnablacdotmathbfB  = 0 \nnablatimesmathbfE = - frac1c x_Pin fracpartialmathbfBpartial t \nnablatimesmathbfB = - frac1c left(4 pi mathbfJ + fracpartialmathbfEpartial t right)\nendaligned","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"These are Maxwell's equations.","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"graph TD\n    A[mermaid.js] --> B[DocumenterMermaid]\n    B --> C[Documenter]","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"---\nconfig:\n  look: handDrawn\n  theme: neutral\n---\nflowchart LR\n  A[Start] --> B{Decision}\n  B -->|Yes| C[Continue]\n  B -->|No| D[Stop]","category":"page"},{"location":"tutorials/sub2/","page":"Subsection 2","title":"Subsection 2","text":"","category":"page"},{"location":"howto/howto/#How-To","page":"How To","title":"How To","text":"","category":"section"},{"location":"howto/howto/#Model-a-reservoir","page":"How To","title":"Model a reservoir","text":"","category":"section"},{"location":"howto/howto/#Model-a-Combined-Heat-and-Power-Plant(CHP)","page":"How To","title":"Model a Combined Heat and Power Plant(CHP)","text":"","category":"section"},{"location":"howto/howto/#Multi-regional-model","page":"How To","title":"Multi-regional model","text":"","category":"section"},{"location":"howto/howto/","page":"How To","title":"How To","text":"","category":"page"},{"location":"reference/model/#Model","page":"Model","title":"Model","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"Here we define the mathematical model of the optimization problem.","category":"page"},{"location":"reference/model/#Sets","page":"Model","title":"Sets","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"years: an ordered set of years, denoted by Y.\ntss: an ordered set of time steps selection, denoted by T.\ncarriers: an unordered set of energy carriers, denoted by C. Dummy is a special carrier that is used to represent the carriers out of the model.\nprocesses: an unordered set of conversion processes, denoted by P. The subset of P that contains storage conversion processes is denoted by S.","category":"page"},{"location":"reference/model/#Parameters","page":"Model","title":"Parameters","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"The input parameters of the optimization model are defined as follows:","category":"page"},{"location":"reference/model/#Global","page":"Model","title":"Global","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"discount_rate: The discount rate is the interest rate used to calculate the present value of future cash flows from a project or investment. For example, at an interest rate of 5%, the value of â‚¬100 will increase to â‚¬105 in one year.\nindices: scalar\nquantity: dimensionless\ntype: Float\ndefault: 0\nRange: [0,infty]\ndiscount_factor: Discount factor for each year that is calculated as follows. It is not directly specified in the config file but is calculated from the discount rate.\nindices: Y\nquantity: dimensionless\ntype: Float\ndefault: 0\nRange: [0,infty]","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textdiscount_factory=(1+textdiscount_rate)^y-Y0quad y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"Y0","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"is the first year of the model.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"dt: Time step size. It shows how many hours each time step represents. \nindices: scalar\nquantity: dimensionless\ntype: Integer\nw:  weight of each time step withim the whole year. It is not directly specified in the config file but is calculated from the time step duration and is equal to 8760(dt*T) where T is the number of time steps and 8760 is the number of hours in a year.\nindices: scalar\nquantity: dimensionless\ntype: Integer","category":"page"},{"location":"reference/model/#CO2","page":"Model","title":"CO2","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"annual_co2_limit(y): Annual CO2 emission limit of the energy system in year y in Y.\nindices: Y\nquantity: CO2 Mass\ntype: Float\ndefault: 0\nRange: [0,infty]\nco2_price(y): CO2 price for emission from the energy system  in year y in Y.\nindices: Y\nquantity: Money/CO2 Mass\ntype: Float\ndefault: 0\nRange: [0,infty]","category":"page"},{"location":"reference/model/#Storage","page":"Model","title":"Storage","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"is_storage(p): Indicates if the conversion process p in P is a storage process.\nindices: P\nquantity: dimensionless\ntype: Boolean\ncharge_efficiency(p): Efficiency of charging of storage conversion process p in P.\nindices: P\nquantity: dimensionless\ntype: Float\ndefault: 1\nRange: (0,1]\nc_rate(p): indicates the discharge and charging rate of the storage conversion process p in P. 2C means that the full storage can be fully discharged in (1 hour)/2=30 minutes.\nindices: P\nquantity: dimensionless\ntype: Float\nRange: (0,1]","category":"page"},{"location":"reference/model/#Legacy","page":"Model","title":"Legacy","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"max_legacy_capacity(p,y): maximum allowed active legacy capacity of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: power\ntype: Float\ndefault: 0\nmin_legacy_capacity(p,y): minimum allowed active legacy capacity of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: power\ntype: Float\ndefault: 0\nRange: [0,infty]","category":"page"},{"location":"reference/model/#Capacity","page":"Model","title":"Capacity","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"max_capacity(p,y): maximum allowed active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: power\ntype: Float\ndefault: 0\nRange: [0,infty]\nmin_capacity(p,y): minimum allowed active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: power\ntype: Float\ndefault: 0\nRange: [0,infty]","category":"page"},{"location":"reference/model/#Costs","page":"Model","title":"Costs","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"operational_cost_energy(p,y): Operational cost per energy output of conversion process p in P in a year.\nindices: P times Y\nquantity: Money/Energy\ntype: Float\ndefault: 0\nRange: [0,infty]\noperational_cost_power(p,y): Operational cost per active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Money/Power\ntype: Float\ndefault: 0\nRange: [0,infty]\ncapital_cost_power(p,y): Capital cost per active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Money/Power\ntype: Float\ndefault: 0\nRange: [0,infty]","category":"page"},{"location":"reference/model/#Fractions","page":"Model","title":"Fractions","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"min_fraction_in(p,y): minimum fraction of the input carrier(cin) generated by conversion process p in P in year y in Y.\nindices: P times Y\nquantity: dimensionless\ntype: Float\ndefault: 0\nmin_fraction_out(p,y): minimum fraction of the output carrier(cout) generated by conversion process p in P in year y in Y.\nindices: P times Y\nquantity: dimensionless\ntype: Float\ndefault: 0\nmax_fraction_in(p,y): maximum fraction of the input carrier(cin) generated by conversion process p in P in year y in Y.\nindices: P times Y\nquantity: dimensionless\ntype: Float\ndefault: 1\nmax_fraction_out(p,y): maximum fraction of the output carrier(cout) generated by conversion process p in P in year y in Y.\nindices: P times Y\nquantity: dimensionless\ntype: Float\ndefault: 1","category":"page"},{"location":"reference/model/#Output-Limits","page":"Model","title":"Output Limits","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"max_energy_out(p,y): maximum energy output of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Energy\ntype: Float\ndefault: infty\nmin_energy_out(p,y): minimum energy output of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Energy\ntype: Float\ndefault: 0","category":"page"},{"location":"reference/model/#Time-Series","page":"Model","title":"Time Series","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"availability_profile(p,t): Availability profile of conversion process p in P at  time step t in T.\nindices: P times T\nquantity: dimensionless\ntype: Float\ndefault: 1\nRange: [0,1]\noutput_profile(p,t): Share of the annual energy output supplied  of the conversion process p in P at time step t in T such that  sum_t in Toutput_profilept=1 quad forall p in P.\nindices: P times T\nquantity: dimensionless\ntype: Float\ndefault: 1\nRange: [0,1]","category":"page"},{"location":"reference/model/#Technical","page":"Model","title":"Technical","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"lifetime(p): Technical lifetime of conversion process p in P in years.\nindices: P\nquantity: Time\ntype: Integer\ndefault: 100\ntechnical_availability(p): Technical availability of conversion process p in P.\nindices: P\nquantity: dimensionless\ntype: Float\ndefault: 1\nRange: [0,1]\nspecific_co2(p): Specific CO2 emission intensity per energy output of conversion process p in P.\nindices: P\nquantity: CO2 Mass/Energy\ntype: Float\ndefault: 0\nefficiency(p): Efficiency of conversion process p in P.\nindices: P\nquantity: dimensionless\ntype: Float\ndefault: 1\nRange: [0,1]","category":"page"},{"location":"reference/model/#Variables","page":"Model","title":"Variables","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"All variables are non-negative unless otherwise specified.","category":"page"},{"location":"reference/model/#Costs-2","page":"Model","title":"Costs","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_total_cost: Total cost.\nindices: scalar\nquantity: Money\ntype: Float\nvar_capital_cost: Capital cost.\nindices: scalar\nquantity: Money\ntype: Float\nvar_operational_cost: Operational cost.\nindices: scalar\nquantity: Money\ntype: Float\nvar_residual_value(p,y): Residual value of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Money\ntype: Float\nvar_total_residual_value: Total residual value.\nindices: scalar\nquantity: Money\ntype: Float","category":"page"},{"location":"reference/model/#CO2-2","page":"Model","title":"CO2","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_annual_emission(y): Annual CO2 emission from the energy system in year y in Y.\nindices: Y\nquantity: CO2 Mass\ntype: Float","category":"page"},{"location":"reference/model/#Capacity-2","page":"Model","title":"Capacity","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_new_capacity(p,y): New capacity of conversion process pin P in year y in Y.\nindices: P times Y\nquantity: Power\ntype: Float\nvar_active_capacity(p,y): Active capacity of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Power\ntype: Float\nvar_legacy_capacity(p,y): Legacy capacity of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Power\ntype: Float","category":"page"},{"location":"reference/model/#Power-and-Energy","page":"Model","title":"Power and Energy","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_power_in(p,y,t): Power input of conversion process p in P in year y in Y at time step t in T.\nindices: P times Y times T\nquantity: Power\ntype: Float\nvar_power_out(p,y,t): Power output of conversion process p in P in year y in Y at time step t in T.\nindices: P times Y times T\nquantity: Power\ntype: Float\nvar_total_energy_out(p,y): Total energy output of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Energy\ntype: Float\nvar_total_energy_in: Total energy input of conversion process p in P in year y in Y.\nindices: P times Y\nquantity: Energy\ntype: Float\nvar_energy_out_time: Energy output of conversion process p in P in year y in Y at time step t in T.\nindices: P times Y times T\nquantity: Energy\ntype: Float\nvar_energy_in_time(p,y,t): Energy input of conversion process p in P in year y in Y at time step t in T.\nindices: P times Y times T\nquantity: Energy\ntype: Float\nvar_net_energy_generation(c,y,t): Net energy generation of energy carrier c in C in year y in Y at time step t in T.\nindices: C times Y times T\nquantity: Energy\ntype: Float\nvar_net_energy_consumption(c,y,t): Net energy consumption of energy carrier c in C in year y in Y at time step t in T.\nindices: C times Y times T\nquantity: Energy\ntype: Float","category":"page"},{"location":"reference/model/#Storage-2","page":"Model","title":"Storage","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"var_storage_level(p,y,t): Storage level of a storage conversion process p in P in year yin Y at time step tin T.\nindices: P times Y times T\nquantity: Energy\ntype: Float\nvar_max_storage_level(p,y): The maximum energy capacity of the storage conversion process p in P in year yin Y.\nindices: P times Y\nquantity: Energy\ntype: Float","category":"page"},{"location":"reference/model/#Constraints","page":"Model","title":"Constraints","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"The constraints are defined in the following sections.","category":"page"},{"location":"reference/model/#Costs-3","page":"Model","title":"Costs","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_cost = textvar_capital_cost + textvar_operational_cost","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"beginalign*\ntextvar_capital_cost = sum_y in Y \nleft(\n  textdiscount_factory * sum_p in P \n    left(\n      textvar_new_capacityp y * textcapital_cost_powerpy\n    right)\nright)\n- textvar_total_residual_value\nendalign*","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"beginalign*\ntextvar_operational_cost =\nsum_pin Psum_y in Y \ntextdiscount_factory \n * \nleft(\n  textvar_active_capacitypy * textoperational_cost_powerpy + texttotal_energy_outpy * textoperational_cost_energypy\nright) \n * left(y^+-yquad textif quad y neq Yend quad textelse quad 1 right)\nendalign*","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"where y^+ is the next year after y.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"beginalign*\ntextvar_residual_valuepy = textvar_new_capacityy * textcapital_cost_powerpy \n* (1 - fracYend-y+1textlifetimep) * textdiscount_factory quad forall yin Yforall p in P\nendalign*","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_residual_value = sum_p in P sum_y in Y textvar_residual_valuey quad textif quad Yend - y  textlifetimep","category":"page"},{"location":"reference/model/#Power-balance","page":"Model","title":"Power balance","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"sum_p in P  pcin=c textvar_power_inpyt = \nsum_p in P  pcout=c textvar_power_outpyt quad forall c in Csetminus Dummy forall y in Y forall t in T","category":"page"},{"location":"reference/model/#CO2-3","page":"Model","title":"CO2","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_annual_emissiony = sum_p in P textvar_total_energy_outpy * textspecific_co2p quad forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"The annual COâ‚‚ emission is equal to the sum of the energy produced by each conversion process multiplied by its specific COâ‚‚ emission.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_annual_emissiony leq textannual_co2_limity quad forall y in Y","category":"page"},{"location":"reference/model/#Power-Output","page":"Model","title":"Power Output","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_outpyt leq textvar_power_inpyt * textefficiencyp quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"why leq and not = ?","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_outpyt leq textvar_active_capacitypy quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_outpyt leq textvar_active_capacitypy * texttechnical_availabilityp quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_outpyt leq textvar_active_capacitypy * textavailability_profilept quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"These three constraints should not be active at the same time for the same process !!!!","category":"page"},{"location":"reference/model/#Power-Energy","page":"Model","title":"Power-Energy","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_out_timepyt = textvar_power_outpyt * textdt * textw quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_in_timepyt = textvar_power_inpyt * textdt * textw quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Fractions-2","page":"Model","title":"Fractions","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_out_timepyt geq textmin_fraction_outpy * textvar_net_energy_generationpcoutyt quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_out_timepyt leq textmax_fraction_outpy * textvar_net_energy_generationpcoutyt quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_in_timepyt geq textmin_fraction_inpy * textvar_net_energy_consumptionpcinyt quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_in_timepyt leq textmax_fraction_inpy * textvar_net_energy_consumptionpcinyt quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Capacity-3","page":"Model","title":"Capacity","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_legacy_capacitypy leq textmax_legacy_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_legacy_capacitypy geq textmin_legacy_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_active_capacitypy leq textvar_legacy_capacitypy + \nsum_yin Y y-textlifetimepyleq ytextvar_new_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_active_capacitypy leq  textmax_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_active_capacitypy geq  textmin_capacitypy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/#Auxiliary-Linking-Variables","page":"Model","title":"Auxiliary Linking Variables","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_energy_outpy = sum_t in T textvar_energy_out_timepyt quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_energy_inpy = sum_t in T textvar_energy_in_timepyt quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_net_energy_generationcyt = sum_pin Ppcout=c\ntextvar_energy_out_timepyt quad forall c in C forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_net_energy_consumptioncyt = sum_pin Ppcin=c\ntextvar_energy_in_timepyt quad forall c in C forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Generation","page":"Model","title":"Generation","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_energy_outpy leq textmax_energy_outpy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_total_energy_outpy geq textmin_energy_outpy quad forall p in P forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_energy_out_timepyt = textvar_total_energy_outpy \n* textoutput_profilept quad forall p in P forall y in Y forall t in T","category":"page"},{"location":"reference/model/#Storage-3","page":"Model","title":"Storage","text":"","category":"section"},{"location":"reference/model/","page":"Model","title":"Model","text":"Let Ssubseteq P be the set of conversion processes that are storage processes.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"S = p in P  pis_storage","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"then","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_max_storage_levelsy = textvar_active_capacitysytextc_rates quad forall s in S forall y in Y","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_storage_levelsyt leq textvar_max_storage_levelsy quad forall s in S forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"textvar_power_insyt leq textvar_active_capacitysy quad forall s in S forall y in Y forall t in T","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"beginalign*\ntextvar_storage_levelsyt = textvar_storage_levelsyt^- \n+ textvar_power_insyt * textdt * textcharge_efficiencys\n- textvar_power_outsyt * textdt  textefficiencys\nquad forall s in S forall y in Y forall t in T\nendalign*","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"t^-","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"is the previous time step of t.","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"<span style=\"color:red\">ðŸš¨ Objective function !</span>","category":"page"},{"location":"reference/model/","page":"Model","title":"Model","text":"","category":"page"},{"location":"#CESM:-Compact-Energy-System-Model","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"section"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"CESM is a multimodal energy system model that can be used to model energy systems with different types of energy carriers (electricity, gas, ...) and conversion processes (gas power plant, PV power plants, heat pumps and ...). The primary goal of CESM is to provide a simple, minimal and easy to understand and extend model for research and teaching purposes.","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"The package is developed in Julia to provide a high performance and easy to use interface and use the power of JuMP for the optimization.","category":"page"},{"location":"#Documentation-Structure","page":"CESM: Compact Energy System Model","title":"Documentation Structure","text":"","category":"section"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"The documentation is organized into the following sections:","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Tutorials - Detailed walk-throughs to help you learn how to use CESM\nHow to... - Directions to help guide your work for a particular task\nExplanation - Additional details and background information to help you understand CESM, its structure, and how it works behind the scenes\nReference - Technical references and API for a quick look-up during your work","category":"page"},{"location":"#FAQ","page":"CESM: Compact Energy System Model","title":"FAQ","text":"","category":"section"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Q: Who is this tool for?   A: Researchers and students exploring energy system concepts and prototypes.","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Q: Is this tool suitable for industrial projects?   A: No, for industrial projects, tools like PyPSA, NREL-Sienna, SpineOpt or TulipaEnergy are better suited.","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Q: Does it model detailed electrical power flows?   A: No, it simplifies by ignoring voltage and phase angle constraints.","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"Throughout the CESM documentation, we strive to follow the Diataxis documentation framework. There are four main sections containing different information:","category":"page"},{"location":"","page":"CESM: Compact Energy System Model","title":"CESM: Compact Energy System Model","text":"","category":"page"},{"location":"reference/inout/#Input-and-Output","page":"Input and Output","title":"Input and Output","text":"","category":"section"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"Here we explain about the Input and Output datastructures.","category":"page"},{"location":"reference/inout/#Input","page":"Input and Output","title":"Input","text":"","category":"section"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"The Input datastructure is a dictionary that contains the input data of the model. This datastructure is produced by the read_input function that gets configuration file as input. The input datastructure is a dictionary that contains the following keys:","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"units: a dictionary that contains the units of the input data.\nparameters: a dictionary that contains the parameters of the model.\ntss: a list of integers that represents the time steps selection of the model.\nyears: a list of integers that represents the years of the model.\ncarriers: a list that contains the carriers of the model.\nconversion_processes: a dictionary that contains the conversion processes of the model. The keys of the dictionary are the names of the conversion processes and the values are dictionaries that contain the carrrier_in and carrier_out carriers of the conversion process.","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"Input = Dict(\n    \"units\" => ...,\n    \"tss\" => ...,\n    \"years\" => ...,\n    \"carriers\" => ...,\n    \"processes\" => ...\n    \"parameters\" => ...,\n)","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"The parameters is a dictionary that contains the parameters of the model. The keys of the dictionary are the names of the parameters and the values are either scalar or dictionaries (possibly nested) that contaon the value of the parameter.","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"If the value is defined over P and Y then the value of the parameter is a nested dictionary.","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"input[\"parameters\"][\"max_capacity\"][\"electricity_to_heat\"][2020]","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"gives you the value of the parameter max_capacity for the conversion process electricitytoheat in the year 2020.","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"parameters dictionary also has a special key defaults which is a dictionary that contains the default values of the parameters. The key is the name of the parameter and the value is the default scalar value.","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"If the value is not defined for electricitytoheat conversion process, then the following is not defined:","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"input[\"parameters\"][\"max_capacity\"]","category":"page"},{"location":"reference/inout/#Output","page":"Input and Output","title":"Output","text":"","category":"section"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"The Output datastructure is also a dictionary. The keys are the names of the variables and similar to the input parameters, the values are either scalar or dictionaries (possibly nested) that contain the optimal values of the variables.","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"output = Dict(\n    \"annual_emission\" => ...,\n    \"new_capacity\" => ...,\n    \"active_capacity\" => ...\n)","category":"page"},{"location":"reference/inout/","page":"Input and Output","title":"Input and Output","text":"","category":"page"},{"location":"tutorials/installation/#Installlation","page":"Installation","title":"Installlation","text":"","category":"section"},{"location":"tutorials/installation/","page":"Installation","title":"Installation","text":"","category":"page"}]
}
